#Read in the verilog files first#

read_file -format sverilog { snn.sv mac.sv uart_tx.sv uart_rx.sv snn_core.sv rst_synch.sv ram_hidden_unit.sv ram_input_unit.sv ram_output_unit.sv rom_act_func_lut.sv rom_hidden_weight.sv rom_output_weight.sv }

# Set Current Design to top level #
set current_design SNN

# Contrain and assign clock #
create_clock -name "clk" -period 2.5 -waveform {0 1} {clk}
set_dont_touch_network [find port clk]

# Constrain input timings & Drive #
#Set variable prim_inputs#
set prim_inputs [remove_from_collection [all_inputs] [find port clk]]
set_input_delay -clock clk 0.5 $prim_inputs
set_driving_cell -lib_cell ND2D2BWP -library tcbn40lpbwptc $prim_inputs
set_drive 0.1 rst_n

# Constrain output timing & loads #
set_output_delay -clock clk 0.5 [all_outputs]
set_load 0.1 [all_outputs]

# Set wireload & transition time #
set_wire_load_model -name TSMC32K_Lowk_Conservative -library tcbn40lpbwptc
set_max_transition 0.15 [current_design]

# Set clock uncertainty and do fix hold #
set_clock_uncertainty 0.10 clk
set_fix_hold clk

# Flatten hierarchy #
ungroup -all -flatten

# Compile the design #
compile -area_effort high -map_effort high

# Generate timing & Area reports #
report_timing -delay max
report_timing -delay min
report_area > area.rpt

# Write out resulting synthesized netlist #
write -format verilog SNN -output snn.vg

